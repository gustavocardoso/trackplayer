////
/// Trackplayer v 0.1
/// @author Gustavo Cardoso
////

/// A simple function to remove unit from a given value
/// @group functions
/// @author [Eduardo Shiota](https://twitter.com/shiota)
///
/// @param {Number} $number - a value in px, em or %
///
/// @example scss - Basic Usage Sass
///   $size = remove-unit(16px);
/// @return {number}
///
/// @example scss - Basic Usage CSS Output
///   $size = 16;
@function remove-unit($number) {
  $unit: unit($number);
  $one: 1;

  @if $unit == "px" { $one: 1px; }
  @if $unit == "em" { $one: 1em; }
  @if $unit == "%" { $one: 1%; }

  @return $number / $one;
}

/// Transform font pixel values into other values.
/// @group mixins
///
/// @param {Number} $font-size - a pixel value
/// @param {Number} $context [16px] - a pixel value related to the context
/// @param {string} $unit [em] - a unit you want to convert
///
/// @example scss - Basic Usage Sass
///   .my-cool-text {
///     @include fontSize(18px, 16px, "em");
///   }
///
/// @example scss - Basic Usage CSS Output
///   .my-cool-text {
///     font-size: 1.125em;
///   }
@mixin fontSize($font-size, $context: 16px, $unit: "em") {
  $size: remove-unit($font-size) / remove-unit($context);
  @if $unit == "em" { font-size: #{$size}em; }
  @if $unit == "px" { font-size: #{$size}px; }
  @if $unit == "%" { font-size: percentage($size); }
}